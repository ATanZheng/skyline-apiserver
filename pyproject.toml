[tool.poetry]
name = "skyline-apiserver"
version = "0.1.0"
description = ""
license = "Apache-2.0"
authors = ["OpenStack <openstack-discuss@lists.openstack.org>"]

[tool.poetry.dependencies]
python = "^3.8"
fastapi = {extras = ["all"], version = "*"}
PyYAML = "*"
attrs = "*"
jsonschema = "*"
immutables = "*"
orjson = "*"
ujson = "*"
uvicorn = {extras = ["standard"], version = "^0.12.1"}
gunicorn = "*"
python-keystoneclient = "3.21.*"
python-cinderclient = "5.0.*"
python-glanceclient = "2.17.*"
python-heatclient = "1.18.*"
python-neutronclient = "6.14.*"
python-novaclient = "15.1.*"
python-octaviaclient = "1.10.*"
osc-placement = "1.7.*"
keystoneauth1 = "3.17.*"
email-validator = "^1.1.1"
python-jose = "^3.2.0"
passlib = "^1.7.2"
alembic = "^1.4.2"
bcrypt = "^3.2.0"
hiyapyco = "^0.4.16"
httpx = "^0.16.1"
sqlalchemy = "1.3.*"
databases = "*"
aiomysql = "^0.0.21"
pymysql = "*"
skyline-policy-manager = "*"
skyline-log = "*"
skyline-config = "*"

[tool.poetry.dev-dependencies]
pytest = "6.1.*"
mypy = "*"
black = "^20.8b1"
isort = "*"
flake8 = "*"
add-trailing-comma = "*"
pre-commit = "*"
pyperf = "*"
pympler = "*"
bandit = "^1.6.2"
aiosqlite = "*"
asgi-lifespan = "*"
pytest-asyncio = "*"
pytest-xdist = {extras = ["psutil"], version = "*"}
skyline-policy-manager = {path = "./libs/skyline-policy-manager", develop = true}
skyline-log = {path = "./libs/skyline-log", develop = true}
skyline-config = {path = "libs/skyline-config", develop = true}

[tool.poetry.scripts]
swagger-generator = 'skyline_apiserver.cmd.generate_swagger:main'
config-sample-generator = 'skyline_apiserver.cmd.generate_sample_config:main'

[tool.black]
line-length = 98
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | exclude.py
)
'''
verbos = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 98
reverse_relative = true
combine_as_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
